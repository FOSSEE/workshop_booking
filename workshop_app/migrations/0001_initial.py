# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-06-22 11:03
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import recurrence.fields
import workshop_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BookedWorkshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute', models.CharField(max_length=150)),
                ('department', models.CharField(choices=[('computer', 'Computer Science'), ('information technology', 'Information Technology'), ('civil engineering', 'Civil Engineering'), ('electrical engineering', 'Electrical Engineering'), ('mechanical engineering', 'Mechanical Engineering'), ('chemical engineering', 'Chemical Engineering'), ('aerospace engineering', 'Aerospace Engineering'), ('biosciences and bioengineering', 'Biosciences and  BioEngineering'), ('electronics', 'Electronics'), ('energy science and engineering', 'Energy Science and Engineering'), ('others', 'Others')], max_length=150)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered                                 in the format: '+99999999'.                                Up to 15 digits allowed.", regex='^.{9}$')])),
                ('position', models.CharField(choices=[('coordinator', 'Coordinator'), ('instructor', 'Instructor')], default='coordinator', help_text='Select Coordinator if you want to organise a workshop                            in your college/school. <br> Select Instructor if you want to conduct                            a workshop.', max_length=32)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('activation_key', models.CharField(blank=True, max_length=255, null=True)),
                ('key_expiry_time', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProposeWorkshopDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition_one', models.BooleanField(default=False, help_text='We assure to     give minimum 50 participants for the workshop.')),
                ('condition_two', models.BooleanField(default=False, help_text="We agree                                 that this booking won't be cancelled without                                 2days of prior notice to the instructor and fossee.")),
                ('condition_three', models.BooleanField(default=False, help_text='This                     proposal is subject to FOSSEE and instructor approval.')),
                ('proposed_workshop_date', models.DateField()),
                ('status', models.CharField(default='Pending', max_length=32)),
                ('proposed_workshop_coordinator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('proposed_workshop_instructor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workshop_app_proposeworkshopdate_related', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RequestedWorkshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_workshop_date', models.DateField()),
                ('status', models.CharField(default='Pending', max_length=32)),
                ('requested_workshop_coordinator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workshop_app_requestedworkshop_related', to=settings.AUTH_USER_MODEL)),
                ('requested_workshop_instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('institute', models.CharField(max_length=255)),
                ('department', models.CharField(max_length=150)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Workshop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recurrences', recurrence.fields.RecurrenceField()),
                ('workshop_instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WorkshopType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workshoptype_name', models.CharField(max_length=120)),
                ('workshoptype_description', models.TextField()),
                ('workshoptype_duration', models.CharField(help_text='Please write this in                     following format eg: 3days, 8hours a day', max_length=32)),
                ('workshoptype_attachments', models.FileField(blank=True, help_text='Please upload workshop documents one by one,                     ie.workshop schedule, instructions etc.                     Please Note: Name of Schedule file should be similar to                     WorkshopType Name', upload_to=workshop_app.models.attachments)),
            ],
        ),
        migrations.AddField(
            model_name='workshop',
            name='workshop_title',
            field=models.ForeignKey(help_text=' [Select the type of workshop.] ', on_delete=django.db.models.deletion.CASCADE, to='workshop_app.WorkshopType'),
        ),
        migrations.AddField(
            model_name='requestedworkshop',
            name='requested_workshop_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='workshop_app.WorkshopType'),
        ),
        migrations.AddField(
            model_name='proposeworkshopdate',
            name='proposed_workshop_title',
            field=models.ForeignKey(help_text='Select the type of workshop.', on_delete=django.db.models.deletion.CASCADE, to='workshop_app.WorkshopType'),
        ),
        migrations.AddField(
            model_name='bookedworkshop',
            name='booked_workshop_proposed',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='workshop_app.ProposeWorkshopDate'),
        ),
        migrations.AddField(
            model_name='bookedworkshop',
            name='booked_workshop_requested',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='workshop_app.RequestedWorkshop'),
        ),
    ]
